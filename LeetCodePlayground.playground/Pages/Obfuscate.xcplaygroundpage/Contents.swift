import Foundation

struct HexadecimalKeys {
    static let a = Data([0x62, 0x72]) // a
    static let b = Data([0x31, 0x42, 0x46, 0x30, 0x34, 0x32, 0x33, 0x38, 0x2d, 0x44]) // dummy
    static let c = Data([0x63, 0x6f, 0x6d]) // c
    static let d = Data([0x45, 0x45, 0x43, 0x2d, 0x34, 0x35, 0x35, 0x46]) // dummy
    static let e = Data([0x62, 0x72, 0x61, 0x64, 0x65, 0x73, 0x63, 0x6f]) // e
    static let f = Data([0x2d, 0x38, 0x33, 0x31, 0x30, 0x2d, 0x45, 0x43, 0x42, 0x38]) // dummy
    static let g = Data([0x61, 0x70, 0x70]) // g
    static let h = Data([0x42, 0x31, 0x42, 0x36, 0x39, 0x37, 0x43, 0x32])
    static let i = Data([0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65]) // i
    static let j = Data([0x41, 0x35, 0x35, 0x38, 0x36, 0x36, 0x41]) // dummy
    static let k = Data([0x38, 0x2d, 0x36, 0x36, 0x43, 0x34, 0x2d]) // dummy
    static let l = Data([0x34, 0x33, 0x32, 0x38, 0x2d, 0x38, 0x31]) // dummy
    static let m = Data([0x44, 0x37, 0x2d, 0x39, 0x39, 0x31, 0x45]) // dummy
    static let n = Data([0x38, 0x44, 0x33, 0x41, 0x33, 0x31, 0x36, 0x45]) // dummy
}

let combinedData = Array([
    HexadecimalKeys.a,
    HexadecimalKeys.c,
    HexadecimalKeys.e,
    HexadecimalKeys.g,
    HexadecimalKeys.i,
].joined(separator: Data([0x2e])))

let hex = combinedData.map { String(format: "%02x", $0) }.joined()
print(hex)
let value = hex.convertFromHexString
print(value)

let valueData = value.data(using: .utf8)
print(valueData as Any)

let data = Data(combinedData)
print(data)
